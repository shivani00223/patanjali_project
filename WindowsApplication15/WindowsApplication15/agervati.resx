<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        If/Z
</value>
  </data>
</root>